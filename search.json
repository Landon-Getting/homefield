[{"path":"https://landon-getting.github.io/homefield/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 homefield authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with homefield","text":"homefield package helps gather data create visuals show spatial relevance entities. producing engaging graphics, homefield can answer questions like: teams remaining March Madness basketball tournament? U.S. President ? teams undefeated college football? example, homefield can query online databases determine football teams undefeated fourth week 1999 season generate map teams represented school colors logo.","code":""},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started with homefield","text":"Install R R Studio. Install latest compatible version RTools. Install devtools package. Install homefield package via Github repository. homefield relies two online databases --date college football census information. databases require API keys can requested installed via following instructions: Follow directions receive install College Football Data API Key. Required homefield::cfb_undefeated() homefield::cfb_conquest(). Follow directions receive install CENSUS API Key. Required homefield::homefield_stats(). package keys installed, homefield can initialized environment via library():","code":"install.packages(\"devtools\") devtools::install_github(\"Landon-Getting/homefield\") library(homefield) # your code here"},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"homefield_map","dir":"Articles","previous_headings":"","what":"homefield_map()","title":"Getting started with homefield","text":"homefield_map() crux homefield package. uses structured data entities generates homefield map. homefield_map() colors counties based closest entity adds image representing entity large groups counties. Entities can sports teams, political candidates, businesses, anything might represented spatially possess territory. Users can create data describing entities use homefield package functions like cfb_undefeated() generate already structured data. Entities required several attributes including identifier, latitude, longitude, color, image. entity encoded row dataframe entities. instance, map may composed sport teams. Iowa State Cyclones entity entity identifier (Iowa State), *latitude** (42.0266573), longitude (-93.6464516), color (#C8102E), image (http://.espncdn.com//teamlogos/ncaa/500/66.png). dataframe multiple entities attributes may look similar following: Next, dataframe inputted homefield_map() function along valid local file path saving map. Additionally, optional arguments : threshold: Change big territory must receive image title: Add title map credit: Give credit map author  case, UCLA’s territory includes western U.S. since located California whereas Florida Gators located southeast. UCLA’s territory also extends Alaska Hawaii. Although regions disconnected primary territory, area well default threshold 10,000 \\(\\mathrm{km^{2}}\\) therefore UCLA image placed centers.","code":"entity <- c(\"Iowa State Cyclones\", \"Florida Gators\", \"UCLA Bruins\")  # must be valid locations lat <- c(42.01400, 29.64994, 34.16133) lng <- c(-93.63577, -82.34858, -118.16765)  # must be a color in hexcode format color <- c(\"#660015\",\"#0021A5\", \"#ffc72c\")  # can be a link or local file image <- c(\"http://a.espncdn.com/i/teamlogos/ncaa/500/66.png\",            \"http://a.espncdn.com/i/teamlogos/ncaa/500/57.png\",            \"http://a.espncdn.com/i/teamlogos/ncaa/500/26.png\")  homefield_data <- data.frame(entity,                              lat,                              lng,                              color,                              image)  homefield_data #>                entity      lat        lng   color #> 1 Iowa State Cyclones 42.01400  -93.63577 #660015 #> 2      Florida Gators 29.64994  -82.34858 #0021A5 #> 3         UCLA Bruins 34.16133 -118.16765 #ffc72c #>                                              image #> 1 http://a.espncdn.com/i/teamlogos/ncaa/500/66.png #> 2 http://a.espncdn.com/i/teamlogos/ncaa/500/57.png #> 3 http://a.espncdn.com/i/teamlogos/ncaa/500/26.png homefield_map(x = homefield_data, # dataframe              output_file = \"C:/Users/darthvader/Downloads/example_map.png\", # save location              threshold = 10000, # area in square km              title = \"Example Map\", # map title              credit = \"Landon Getting\") # credit for author"},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"getting-data-for-homefield-maps","dir":"Articles","previous_headings":"","what":"Getting data for homefield maps","title":"Getting started with homefield","text":"previous example, input dataframe describing entities created scratch. However, homefield package currently provides 2 functions query interesting college football data directly structured format: cfb_undefeated() cfb_conquest(). Remember complete steps Installation receive install College Football Database API key.","code":""},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"cfb_undefeated","dir":"Articles","previous_headings":"Getting data for homefield maps","what":"cfb_undefeated()","title":"Getting started with homefield","text":"cfb_undefeated() returns dataframe undefeated teams particular season week. dataframe output cfb_undefeated() can used directly homefield_map().","code":"cfb_undefeated_s1999_w4 <- cfb_undefeated(season = 1999, week = 4)  head(cfb_undefeated_s1999_w4) #>           entity      lat        lng   color #> 1      Air Force 38.99697 -104.84362 #004a7b #> 2       Arkansas 36.06807  -94.17895 #9c1831 #> 3         Auburn 32.60255  -85.48975 #03244d #> 4            BYU 40.25753 -111.65452 #001E4C #> 5 Boston College 42.33510  -71.16644 #88001a #> 6  East Carolina 35.59685  -77.36456 #4b1869 #>                                                     image #> 1 http://a.espncdn.com/i/teamlogos/ncaa/500-dark/2005.png #> 2         http://a.espncdn.com/i/teamlogos/ncaa/500/8.png #> 3         http://a.espncdn.com/i/teamlogos/ncaa/500/2.png #> 4  http://a.espncdn.com/i/teamlogos/ncaa/500-dark/252.png #> 5  http://a.espncdn.com/i/teamlogos/ncaa/500-dark/103.png #> 6       http://a.espncdn.com/i/teamlogos/ncaa/500/151.png homefield_map(x = cfb_undefeated(season = 1999, week = 4),              output_file = \"C:/Users/darthvader/Downloads/cfb_undefeated_s2022_w4.png\",              title = \"College Football Undefeated - Season 1999 Week 4\",              credit = \"Landon Getting\")"},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"cfb_conquest","dir":"Articles","previous_headings":"Getting data for homefield maps","what":"cfb_conquest()","title":"Getting started with homefield","text":"cfb_conquest(), teams start land closest . season progresses, teams acquire land teams defeat. dataframe output cfb_conquest() can used directly homefield_map().  Since Iowa State University defeated UNLV week 3 1999 season, gained UNLV’s territory. cfb_conquest() additional argument, division, allows NCAA D1 FCS teams start land addition FBS teams.","code":"cfb_conquest_s1999_w4 <- cfb_conquest(season = 1999, week = 4)  head(cfb_conquest_s1999_w4) #>      entity      lat        lng   color #> 1 Air Force 38.99697 -104.84362 #004a7b #> 2     Akron 42.99913  -78.77751 #84754e #> 3  Arkansas 36.06807  -94.17895 #9c1831 #> 4  Arkansas 32.83772  -96.78279 #9c1831 #> 5    Auburn 36.21143  -81.68543 #03244d #> 6    Auburn 32.60255  -85.48975 #03244d #>                                                     image #> 1 http://a.espncdn.com/i/teamlogos/ncaa/500-dark/2005.png #> 2      http://a.espncdn.com/i/teamlogos/ncaa/500/2006.png #> 3         http://a.espncdn.com/i/teamlogos/ncaa/500/8.png #> 4         http://a.espncdn.com/i/teamlogos/ncaa/500/8.png #> 5         http://a.espncdn.com/i/teamlogos/ncaa/500/2.png #> 6         http://a.espncdn.com/i/teamlogos/ncaa/500/2.png homefield_map(x = cfb_conquest(season = 1999, week = 4),              output_file = \"C:/Users/darthvader/Downloads/cfb_conquest_s2022_w4.png\",              title = \"College Football Conquest - Season 1999 Week 4\",              credit = \"Landon Getting\")"},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"summarizing-maps","dir":"Articles","previous_headings":"","what":"Summarizing Maps","title":"Getting started with homefield","text":"homefield_stats() generates summary statistics particular map including total land, water, population within entity’s territory. dataframe input used homefield_map() can used homefield_stats(). summary statistics can used explore data answer questions like: teams territory start season? teams control water land week 7? top 5 teams population located within territory? homefield_stats() can paired dplyr package answer last question.","code":"cfb_undefeated_s1999_w4_stats <- homefield_stats(x = cfb_undefeated(season = 1999, week = 4))  head(cfb_undefeated_s1999_w4_stats) #>           entity         land       water       domain      pop #> 1      Air Force 610234978656  2533273302 612768251958  6638127 #> 2       Arkansas 186833484833  4234865393 191068350226  5122951 #> 3         Auburn 106215319059  4688840187 110904159246  4365585 #> 4            BYU 292222970451  1844563724 294067534175  1448537 #> 5 Boston College 223771886456 31278621299 255050507755 31475972 #> 6  East Carolina 104201019210 15782222629 119983241839  7592900 dplyr::slice_max(cfb_undefeated_s1999_w4_stats, # output from homefield_stats()                  order_by = pop, # sorting by population                  n = 5) |> # top 5   dplyr::select(entity, # selecting only entity and pop columns                 pop) #>           entity      pop #> 1 Boston College 31475972 #> 2  East Carolina  7592900 #> 3      Air Force  6638127 #> 4       Arkansas  5122951 #> 5         Auburn  4365585"},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"map-stats-over-time","dir":"Articles","previous_headings":"Summarizing Maps","what":"Map Stats over Time","title":"Getting started with homefield","text":"homefield_stats() can also create summary statistics maps time using temporal argument. example, homefield_stats() can combined cfb_undefeated() show statistics course season. Converting output square meters square miles. dataframe output summary statistics team week. example, population within Alabama’s territory increases throughout season. outputted summary data homefield_stats() can used create graphics describing maps. homefield package built-function visualize state homefield maps time - homefield_racing().","code":"# undefeated for each week, 0 through 15 cfb_undefeated_2022 <- list(cfb_undefeated(season = 2022, week = 0),                             cfb_undefeated(season = 2022, week = 1),                             cfb_undefeated(season = 2022, week = 2),                             cfb_undefeated(season = 2022, week = 3),                             cfb_undefeated(season = 2022, week = 4),                             cfb_undefeated(season = 2022, week = 5),                             cfb_undefeated(season = 2022, week = 6),                             cfb_undefeated(season = 2022, week = 7),                             cfb_undefeated(season = 2022, week = 8),                             cfb_undefeated(season = 2022, week = 9),                             cfb_undefeated(season = 2022, week = 10),                             cfb_undefeated(season = 2022, week = 11),                             cfb_undefeated(season = 2022, week = 12),                             cfb_undefeated(season = 2022, week = 13),                             cfb_undefeated(season = 2022, week = 14),                             cfb_undefeated(season = 2022, week = 15))  # date of each week cfb_dates_2022 <- lubridate::ymd(c(\"2022-08-27\",                                    \"2022-09-03\",                                    \"2022-09-10\",                                    \"2022-09-17\",                                    \"2022-09-24\",                                    \"2022-10-1\",                                    \"2022-10-8\",                                    \"2022-10-15\",                                    \"2022-10-22\",                                    \"2022-10-29\",                                    \"2022-11-5\",                                    \"2022-11-12\",                                    \"2022-11-19\",                                    \"2022-11-26\",                                    \"2022-12-3\",                                    \"2022-12-10\"))  cfb_undefeated_2022_stats <- homefield_stats(x = cfb_undefeated_2022,                                   temporal = cfb_dates_2022,                                   keep_max = FALSE,                                   keep_visuals = TRUE) # converting land from square meters to square miles cfb_undefeated_2022_stats <- cfb_undefeated_2022_stats |>   dplyr::mutate(land = land/2.59e6) |>   dplyr::select(entity,                 land,                 time,                 color,                 image)  head(cfb_undefeated_2022_stats) #>              entity      land       time   color #> 1         Air Force 73410.774 2022-08-27 #004a7b #> 2             Akron  5384.247 2022-08-27 #84754e #> 3           Alabama  9698.773 2022-08-27 #690014 #> 4 Appalachian State 11482.544 2022-08-27 #000000 #> 5           Arizona 23098.589 2022-08-27 #002449 #> 6     Arizona State 66025.140 2022-08-27 #942139 #>                                                     image #> 1 http://a.espncdn.com/i/teamlogos/ncaa/500-dark/2005.png #> 2      http://a.espncdn.com/i/teamlogos/ncaa/500/2006.png #> 3  http://a.espncdn.com/i/teamlogos/ncaa/500-dark/333.png #> 4      http://a.espncdn.com/i/teamlogos/ncaa/500/2026.png #> 5        http://a.espncdn.com/i/teamlogos/ncaa/500/12.png #> 6         http://a.espncdn.com/i/teamlogos/ncaa/500/9.png cfb_undefeated_2022_stats |>   dplyr::filter(entity == \"Alabama\") |>   dplyr::select(entity, pop, time) |>   head() #>    entity     pop       time #> 1 Alabama  429223 2022-08-27 #> 2 Alabama  452185 2022-09-03 #> 3 Alabama 2463971 2022-09-10 #> 4 Alabama 4137329 2022-09-17 #> 5 Alabama 8449732 2022-09-24 #> 6 Alabama 9614778 2022-10-01"},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"visualizing-stats","dir":"Articles","previous_headings":"","what":"Visualizing Stats","title":"Getting started with homefield","text":"homefield_racing() generates racing bar chart animation entities compete top 10 spots based summary statistics homefield_stats(). example, output dataframe homefield_stats() describing 2022 college football season can visualized homefield_racing() function. teams gain territory, appear higher chart. However, team loses, removed chart. can show impact triumphant victories heartbreaking defeats.","code":"homefield_racing(x = cfb_undefeated_2022_stats,                 stat_name = \"land\",                 title = \"2022 Season Week by Week - Undefeated CFB homefield Map\",                 subtitle = \"Area in Square Miles\",                 caption = \"Data Source: cfbd.com\",                 output_file = \"C:/Users/darthvader/Downloads/cfb_undefeated_2022_racing.gif\")"},{"path":"https://landon-getting.github.io/homefield/articles/homefield.html","id":"interactive-maps","dir":"Articles","previous_headings":"","what":"Interactive Maps","title":"Getting started with homefield","text":"homefield_shiny() showcases several functions homefield package interactive application visualizing College Football seasons. Users can choose type map, season, week homefield map automatically generated.","code":""},{"path":"https://landon-getting.github.io/homefield/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Landon Getting. Author, maintainer. Sudesh Bhagat. Author.","code":""},{"path":"https://landon-getting.github.io/homefield/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Getting L, Bhagat S (2023). homefield: homefield. https://github.com/Landon-Getting/homfield/, https://landon-getting.github.io/homefield/.","code":"@Manual{,   title = {homefield: homefield},   author = {Landon Getting and Sudesh Bhagat},   year = {2023},   note = {https://github.com/Landon-Getting/homfield/, https://landon-getting.github.io/homefield/}, }"},{"path":"https://landon-getting.github.io/homefield/index.html","id":"overview-","dir":"","previous_headings":"","what":"homefield","title":"homefield","text":"homefield package helps gather data create visuals show spatial relevance entities.","code":""},{"path":"https://landon-getting.github.io/homefield/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"homefield","text":"Install R R Studio. Install latest compatible version RTools. Install devtools package. Install homefield package via Github. homefield relies two online databases --date college football census information. databases require API keys can requested installed via following instructions: Follow directions receive install College Football Data API Key. Required homefield::cfb_undefeated() homefield::cfb_conquest(). Follow directions receive install CENSUS API Key. Required homefield::homefield_stats(). package keys installed, homefield can initialized environment via library():","code":"install.packages(\"devtools\") devtools::install_github(\"Landon-Getting/homefield\") library(homefield) # your code here"},{"path":"https://landon-getting.github.io/homefield/index.html","id":"homefield_map","dir":"","previous_headings":"","what":"homefield_map()","title":"homefield","text":"homefield maps created based attributes entities including identifier, latitude, longitude, color, image. instance, map may composed sport teams. Iowa State Cyclones entity entity identifier (Iowa State), latitude (42.0266573), longitude (-93.6464516), color (#C8102E), image (http://.espncdn.com//teamlogos/ncaa/500/66.png). dataframe multiple entities attributes may look similar following: Next, homefield map can plotted dataframe saved .png file specified location.","code":"entity <- c(\"Iowa State Cyclones\", \"Florida Gators\", \"UCLA Bruins\")  # must be valid locations lat <- c(42.01400, 29.64994, 34.16133) lng <- c(-93.63577, -82.34858, -118.16765)  # must be a color in hexcode format color <- c(\"#660015\",\"#0021A5\", \"#ffc72c\")  # can be a link or local file image <- c(\"http://a.espncdn.com/i/teamlogos/ncaa/500/66.png\",            \"http://a.espncdn.com/i/teamlogos/ncaa/500/57.png\",            \"http://a.espncdn.com/i/teamlogos/ncaa/500/26.png\")  homefield_data <- data.frame(entity,                              lat,                              lng,                              color,                              image)  homefield_data ##                entity      lat        lng   color ## 1 Iowa State Cyclones 42.01400  -93.63577 #660015 ## 2      Florida Gators 29.64994  -82.34858 #0021A5 ## 3         UCLA Bruins 34.16133 -118.16765 #ffc72c ##                                              image ## 1 http://a.espncdn.com/i/teamlogos/ncaa/500/66.png ## 2 http://a.espncdn.com/i/teamlogos/ncaa/500/57.png ## 3 http://a.espncdn.com/i/teamlogos/ncaa/500/26.png homefield_map(x = homefield_data, # dataframe              output_file = \"C:/Users/darthvader/Downloads/example_map.png\", # save location              threshold = 10000, # area in square km              title = \"Example Map\", # map title              credit = \"Landon Getting\") # credit for author"},{"path":"https://landon-getting.github.io/homefield/index.html","id":"getting-data-for-homefield-maps","dir":"","previous_headings":"","what":"Getting data for homefield maps","title":"homefield","text":"homefield package currently provides 2 functions query interesting college football data directly structured format: cfb_undefeated() cfb_conquest(). Remember complete steps Installation receive install College Football Database API key.","code":""},{"path":"https://landon-getting.github.io/homefield/index.html","id":"cfb_undefeated","dir":"","previous_headings":"Getting data for homefield maps","what":"cfb_undefeated()","title":"homefield","text":"cfb_undefeated() returns dataframe undefeated teams particular season week. dataframe output cfb_undefeated() can used directly homefield_map().","code":"cfb_undefeated_s1999_w4 <- cfb_undefeated(season = 1999, week = 4)  head(cfb_undefeated_s1999_w4) ##           entity      lat        lng   color ## 1      Air Force 38.99697 -104.84362 #004a7b ## 2       Arkansas 36.06807  -94.17895 #9c1831 ## 3         Auburn 32.60255  -85.48975 #03244d ## 4            BYU 40.25753 -111.65452 #001E4C ## 5 Boston College 42.33510  -71.16644 #88001a ## 6  East Carolina 35.59685  -77.36456 #4b1869 ##                                                     image ## 1 http://a.espncdn.com/i/teamlogos/ncaa/500-dark/2005.png ## 2         http://a.espncdn.com/i/teamlogos/ncaa/500/8.png ## 3         http://a.espncdn.com/i/teamlogos/ncaa/500/2.png ## 4  http://a.espncdn.com/i/teamlogos/ncaa/500-dark/252.png ## 5  http://a.espncdn.com/i/teamlogos/ncaa/500-dark/103.png ## 6       http://a.espncdn.com/i/teamlogos/ncaa/500/151.png homefield_map(x = cfb_undefeated(season = 1999, week = 4),              output_file = \"C:/Users/darthvader/Downloads/cfb_undefeated_s2022_w4.png\",              title = \"College Football Undefeated - Season 1999 Week 4\",              credit = \"Landon Getting\")"},{"path":"https://landon-getting.github.io/homefield/index.html","id":"cfb_conquest","dir":"","previous_headings":"Getting data for homefield maps","what":"cfb_conquest()","title":"homefield","text":"cfb_conquest(), teams start land closest . season progresses, teams acquire land teams defeat. dataframe output cfb_conquest() can used directly homefield_map().","code":"cfb_conquest_s1999_w4 <- cfb_conquest(season = 1999, week = 4)  head(cfb_conquest_s1999_w4) ##      entity      lat        lng   color ## 1 Air Force 38.99697 -104.84362 #004a7b ## 2     Akron 42.99913  -78.77751 #84754e ## 3  Arkansas 36.06807  -94.17895 #9c1831 ## 4  Arkansas 32.83772  -96.78279 #9c1831 ## 5    Auburn 36.21143  -81.68543 #03244d ## 6    Auburn 32.60255  -85.48975 #03244d ##                                                     image ## 1 http://a.espncdn.com/i/teamlogos/ncaa/500-dark/2005.png ## 2      http://a.espncdn.com/i/teamlogos/ncaa/500/2006.png ## 3         http://a.espncdn.com/i/teamlogos/ncaa/500/8.png ## 4         http://a.espncdn.com/i/teamlogos/ncaa/500/8.png ## 5         http://a.espncdn.com/i/teamlogos/ncaa/500/2.png ## 6         http://a.espncdn.com/i/teamlogos/ncaa/500/2.png homefield_map(x = cfb_conquest(season = 1999, week = 4),              output_file = \"C:/Users/darthvader/Downloads/cfb_conquest_s2022_w4.png\",              title = \"College Football Conquest - Season 1999 Week 4\",              credit = \"Landon Getting\")"},{"path":"https://landon-getting.github.io/homefield/index.html","id":"summarizing-maps","dir":"","previous_headings":"","what":"Summarizing Maps","title":"homefield","text":"homefield_stats() generates summary statistics particular map including total land, water, population within entity’s territory. dataframe input used homefield_map() can used homefield_stats().","code":"cfb_undefeated_s1999_w4_stats <- homefield_stats(x = cfb_undefeated(season = 1999, week = 4))  head(cfb_undefeated_s1999_w4_stats) ##           entity         land       water       domain      pop ## 1      Air Force 610234978656  2533273302 612768251958  6638127 ## 2       Arkansas 186833484833  4234865393 191068350226  5122951 ## 3         Auburn 106215319059  4688840187 110904159246  4365585 ## 4            BYU 292222970451  1844563724 294067534175  1448537 ## 5 Boston College 223771886456 31278621299 255050507755 31475972 ## 6  East Carolina 104201019210 15782222629 119983241839  7592900"},{"path":"https://landon-getting.github.io/homefield/index.html","id":"map-stats-over-time","dir":"","previous_headings":"Summarizing Maps","what":"Map Stats over Time","title":"homefield","text":"homefield_stats() can also create summary statistics maps time using temporal argument. example, homefield_stats() can combined cfb_undefeated() show statistics course season. Converting output square meters square miles.","code":"# undefeated for each week, 0 through 15 cfb_undefeated_2022 <- list(cfb_undefeated(season = 2022, week = 0),                             cfb_undefeated(season = 2022, week = 1),                             cfb_undefeated(season = 2022, week = 2),                             cfb_undefeated(season = 2022, week = 3),                             cfb_undefeated(season = 2022, week = 4),                             cfb_undefeated(season = 2022, week = 5),                             cfb_undefeated(season = 2022, week = 6),                             cfb_undefeated(season = 2022, week = 7),                             cfb_undefeated(season = 2022, week = 8),                             cfb_undefeated(season = 2022, week = 9),                             cfb_undefeated(season = 2022, week = 10),                             cfb_undefeated(season = 2022, week = 11),                             cfb_undefeated(season = 2022, week = 12),                             cfb_undefeated(season = 2022, week = 13),                             cfb_undefeated(season = 2022, week = 14),                             cfb_undefeated(season = 2022, week = 15))  # date of each week cfb_dates_2022 <- lubridate::ymd(c(\"2022-08-27\",                                    \"2022-09-03\",                                    \"2022-09-10\",                                    \"2022-09-17\",                                    \"2022-09-24\",                                    \"2022-10-1\",                                    \"2022-10-8\",                                    \"2022-10-15\",                                    \"2022-10-22\",                                    \"2022-10-29\",                                    \"2022-11-5\",                                    \"2022-11-12\",                                    \"2022-11-19\",                                    \"2022-11-26\",                                    \"2022-12-3\",                                    \"2022-12-10\"))  cfb_undefeated_2022_stats <- homefield_stats(x = cfb_undefeated_2022,                                   temporal = cfb_dates_2022,                                   keep_max = FALSE,                                   keep_visuals = TRUE) # converting land from square meters to square miles cfb_undefeated_2022_stats <- cfb_undefeated_2022_stats |>   dplyr::mutate(land = land/2.59e6) |>   dplyr::select(entity,                 land,                 time,                 color,                 image)  head(cfb_undefeated_2022_stats) ##              entity      land       time   color ## 1         Air Force 73410.774 2022-08-27 #004a7b ## 2             Akron  5384.247 2022-08-27 #84754e ## 3           Alabama  9698.773 2022-08-27 #690014 ## 4 Appalachian State 11482.544 2022-08-27 #000000 ## 5           Arizona 23098.589 2022-08-27 #002449 ## 6     Arizona State 66025.140 2022-08-27 #942139 ##                                                     image ## 1 http://a.espncdn.com/i/teamlogos/ncaa/500-dark/2005.png ## 2      http://a.espncdn.com/i/teamlogos/ncaa/500/2006.png ## 3  http://a.espncdn.com/i/teamlogos/ncaa/500-dark/333.png ## 4      http://a.espncdn.com/i/teamlogos/ncaa/500/2026.png ## 5        http://a.espncdn.com/i/teamlogos/ncaa/500/12.png ## 6         http://a.espncdn.com/i/teamlogos/ncaa/500/9.png"},{"path":"https://landon-getting.github.io/homefield/index.html","id":"visualizing-stats","dir":"","previous_headings":"","what":"Visualizing Stats","title":"homefield","text":"homefield_racing() generates racing bar chart animation entities compete top 10 spots based summary statistics homefield_stats(). example, output dataframe homefield_stats() describing 2022 college football season can visualized homefield_racing() function.","code":"homefield_racing(x = cfb_undefeated_2022_stats,                 stat_name = \"land\",                 title = \"2022 Season Week by Week - Undefeated CFB homefield Map\",                 subtitle = \"Area in Square Miles\",                 caption = \"Data Source: cfbd.com\",                 output_file = \"C:/Users/lwget/Downloads/cfb_undefeated_2022_racing.gif\")"},{"path":"https://landon-getting.github.io/homefield/index.html","id":"interactive-maps","dir":"","previous_headings":"","what":"Interactive Maps","title":"homefield","text":"homefield_shiny() showcases several functions homefield package interactive application visualizing College Football seasons. Users can choose type map, season, week homefield map automatically generated.","code":""},{"path":"https://landon-getting.github.io/homefield/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"homefield","text":"Thank Matt Daniel - designer homefield sticker. homefield package created part Dr. Heike Hofmann’s STAT 585 Iowa State University. homefield inspired similar maps created u/CaptainScuttlebottom u/jloose128 Reddit.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/cfb_conquest.html","id":null,"dir":"Reference","previous_headings":"","what":"cfb_conquest — cfb_conquest","title":"cfb_conquest — cfb_conquest","text":"Provides data frame current college football conquest data particular season week. data frame ready plotting hf_map().","code":""},{"path":"https://landon-getting.github.io/homefield/reference/cfb_conquest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cfb_conquest — cfb_conquest","text":"","code":"cfb_conquest(season, week, division = \"fbs\")"},{"path":"https://landon-getting.github.io/homefield/reference/cfb_conquest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cfb_conquest — cfb_conquest","text":"season (Integer required): Year, 4 digit format (YYYY), ~1897 present. week (Integer required): Week, values 1-15, 1-14 seasons pre-playoff (.e. 2013 eariler). division (String required): lowest division start owning land? Acceptable inputs include \"fbs\" \"fcs\". Defaults \"fbs\".","code":""},{"path":"https://landon-getting.github.io/homefield/reference/cfb_conquest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cfb_conquest — cfb_conquest","text":"Returns data frame prepared homefield_map().","code":""},{"path":"https://landon-getting.github.io/homefield/reference/cfb_conquest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cfb_conquest — cfb_conquest","text":"","code":"if (FALSE) cfb_conquest(season = 2016, week = 8)"},{"path":"https://landon-getting.github.io/homefield/reference/cfb_undefeated.html","id":null,"dir":"Reference","previous_headings":"","what":"cfb_undefeated — cfb_undefeated","title":"cfb_undefeated — cfb_undefeated","text":"Provides data frame undefeated D1 College Football teams particular season week. data frame ready plotting hf_map().","code":""},{"path":"https://landon-getting.github.io/homefield/reference/cfb_undefeated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cfb_undefeated — cfb_undefeated","text":"","code":"cfb_undefeated(season, week)"},{"path":"https://landon-getting.github.io/homefield/reference/cfb_undefeated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cfb_undefeated — cfb_undefeated","text":"season (Integer required): Year, 4 digit format (YYYY), ~1897 present. week (Integer required): Week, values 1-15, 1-14 seasons pre-playoff (.e. 2013 eariler).","code":""},{"path":"https://landon-getting.github.io/homefield/reference/cfb_undefeated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cfb_undefeated — cfb_undefeated","text":"Returns data frame prepared homefield_map().","code":""},{"path":"https://landon-getting.github.io/homefield/reference/cfb_undefeated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cfb_undefeated — cfb_undefeated","text":"","code":"if (FALSE) cfb_undefeated(season = 2016, week = 8)"},{"path":"https://landon-getting.github.io/homefield/reference/homefield_map.html","id":null,"dir":"Reference","previous_headings":"","what":"homefield_map — homefield_map","title":"homefield_map — homefield_map","text":"Generates homefield map saves .png file specified location.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/homefield_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"homefield_map — homefield_map","text":"","code":"homefield_map(x, threshold = 10000, output_file, title = NULL, credit = NULL)"},{"path":"https://landon-getting.github.io/homefield/reference/homefield_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"homefield_map — homefield_map","text":"x Data frame created homefield functions including following columns:entity - identifies entity (ex. school name - Iowa State, Minnesota, Bowling Green).lat - latitude entitylng - longitude entitycolor - hexadecimal color fill entity territories (ex. #cfab7a).image - image url local file path placed least one territory territories larger threshold. Columns must also equal length match specified names exactly. threshold (Numeric required): territory threshold (area km^2), secondary logo generated territory. Defaults 10,000 km^2. output_file (String required): Local file path ending .png. title (String required): Title map. credit (String required): Name map author.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/homefield_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"homefield_map — homefield_map","text":"","code":"if (FALSE) cfb_data <- cfb_undefeated(season = 2016, week = 6) if (FALSE) homefield_map(x = cfb_data, output_file = paste0(getwd(),\"/homefield_map_example.png\"))"},{"path":"https://landon-getting.github.io/homefield/reference/homefield_racing.html","id":null,"dir":"Reference","previous_headings":"","what":"homefield_racing — homefield_racing","title":"homefield_racing — homefield_racing","text":"Creates racing bar chart show map summary statistics time saves .gif file specified location.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/homefield_racing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"homefield_racing — homefield_racing","text":"","code":"homefield_racing(   x,   stat_name,   output_file,   title = \"Racing Bar Chart\",   subtitle = \"Value Label\",   caption = \"Data Source\" )"},{"path":"https://landon-getting.github.io/homefield/reference/homefield_racing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"homefield_racing — homefield_racing","text":"x Data frame created homefield_stats() including following columns:entity - identifies entity (ex. school name - Iowa State, Minnesota, Bowling Green).color - hexadecimal color fill entity bars (ex. #cfab7a).image - image url local file path placed entity bars.time - date-times representing set summary statistics relevant.stat_name - Summary statistic column name specified stat_name argument. Examples homefield_stats() include land, water, domain, population. stat_name (String required): Name summary statistic column determines bar size ordering. output_file (String required): Local file path ending .gif. title (String required): Title map. subtitle (String required): Subtitle map. Usually indicates label summary statistic. caption (String required): Caption map. Usually includes provides credit data origins.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/homefield_racing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"homefield_racing — homefield_racing","text":"","code":"if (FALSE) { # Creating racing bar chart for cfb conquest maps in 2021  # undefeated for each week, 0 through 15 x_input <- list(cfb_conquest(season = 2021, week = 0),                cfb_conquest(season = 2021, week = 1),                cfb_conquest(season = 2021, week = 2),                cfb_conquest(season = 2021, week = 3),                cfb_conquest(season = 2021, week = 4),                cfb_conquest(season = 2021, week = 5),                cfb_conquest(season = 2021, week = 6),                cfb_conquest(season = 2021, week = 7),                cfb_conquest(season = 2021, week = 8),                cfb_conquest(season = 2021, week = 9),                cfb_conquest(season = 2021, week = 10),                cfb_conquest(season = 2021, week = 11),                cfb_conquest(season = 2021, week = 12),                cfb_conquest(season = 2021, week = 13),                cfb_conquest(season = 2021, week = 14),                cfb_conquest(season = 2021, week = 15))  # time in weeks, 0 through 15 temporal_input <- lubridate::ymd(c(\"2021-08-28\",                                   \"2021-09-04\",                                   \"2021-09-11\",                                   \"2021-09-18\",                                   \"2021-09-25\",                                   \"2021-10-2\",                                   \"2021-10-9\",                                   \"2021-10-16\",                                   \"2021-10-23\",                                   \"2021-10-30\",                                   \"2021-11-6\",                                   \"2021-11-13\",                                   \"2021-11-20\",                                   \"2021-11-26\",                                   \"2021-12-4\",                                  \"2021-12-11\"))   temporal_stats <- homefield_stats(x = x_input,                                temporal = temporal_input,                                keep_max = FALSE,                                keep_visuals = TRUE)  # converting land from square meters to square miles temporal_stats_plot <- temporal_stats |>  dplyr::mutate(land = land/2.59e6)  hf_racing(x = temporal_stats_plot,                stat_name = \"land\",                title = \"2021 Season Week by Week - CFB Conquest homefield Map\",                subtitle = \"Area in Square Miles\",                caption = \"Data Source: cfbd.com\",                output_file = \"C:/Users/darthvader/Downloads/cfb_conquest_2021_racing.gif\") }"},{"path":"https://landon-getting.github.io/homefield/reference/homefield_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"homefield_shiny — homefield_shiny","title":"homefield_shiny — homefield_shiny","text":"Opens homefield Shiny App features college football homefield maps.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/homefield_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"homefield_shiny — homefield_shiny","text":"","code":"homefield_shiny()"},{"path":"https://landon-getting.github.io/homefield/reference/homefield_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"homefield_shiny — homefield_shiny","text":"","code":"if (FALSE) homefield::homefield_shiny()"},{"path":"https://landon-getting.github.io/homefield/reference/homefield_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"homefield_stats — homefield_stats","title":"homefield_stats — homefield_stats","text":"Returns data frame summary statistics entity based homefield map. function requires CENSUS API Key. Follow directions receive key.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/homefield_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"homefield_stats — homefield_stats","text":"","code":"homefield_stats(   x,   continental = TRUE,   temporal = NULL,   keep_max = FALSE,   keep_visuals = FALSE )"},{"path":"https://landon-getting.github.io/homefield/reference/homefield_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"homefield_stats — homefield_stats","text":"x (Required): Data frame created homefield functions including following columns:entity - identifies entity (ex. school name - Iowa State, Minnesota, Bowling Green).lat - latitude entity.lng - longitude entity.color - (Optional:) hexadecimal color (ex. #cfab7a) useful plotting homefield_map(). Set keep_visuals = TRUE include column returned data frame.image - (Optional:)image url local file path useful plotting homefield_map(). Set keep_visuals = TRUE include column returned data frame. Columns must also equal length match specified names exactly. continental (Optional - Boolean required):  TRUE (default), considers continental United States. FALSE, also considers Alaska Hawaii. temporal (Optional - Vector date-time values required): alter returned data frame include extra column named 'time' supplied temporal information tidy format. vector contain temporal values representing respective time data frame. argument declared vector, x must list data frames. length vector supplied must equal number data frames x. keep_max (Optional - Boolean required:) cases, entity may longer present future temporal instances. keep_max = TRUE, entities generated future instances statistics match instance recently present. keep_max = FALSE (default), entities generated future instances statistics set 0.  keep_max = NULL, entities generated future instances appear already. keep_visuals (Optional - Boolean required:) x color image columns present, keep_visuals can used discard keep columns returned data frame. keep_visuals = TRUE, columns kept. keep_visuals = FALSE (default), columns removed.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/homefield_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"homefield_stats — homefield_stats","text":"Output data frame includes four summary statistics:  land - Total land area area (square meters) within territory controlled entity.  water - Total land area area (square meters) within territory controlled entity.  domain - Sum land water area (square meters) within territory controlled entity.  pop - Population resides within territory controlled entity.","code":""},{"path":"https://landon-getting.github.io/homefield/reference/homefield_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"homefield_stats — homefield_stats","text":"","code":"if (FALSE) {  # standard example cfb_map_stats <- homefield_stats(cfb_undefeated(season = 2021, week = 6))  # temporal example x_input <- list(cfb_undefeated(season = 2021, week = 0),                 cfb_undefeated(season = 2021, week = 1),                 cfb_undefeated(season = 2021, week = 2),                 cfb_undefeated(season = 2021, week = 3),                 cfb_undefeated(season = 2021, week = 4))  # week 0 through 4 temporal_input <- lubridate::ymd(c(\"2021-08-28\",                                    \"2021-09-04\",                                    \"2021-09-11\",                                    \"2021-09-18\"))  map_stats <- homefield::homefield_stats(x = x_input,                                          temporal = temporal_input)  }"}]
